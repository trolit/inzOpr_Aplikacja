@model crud.Models.Imprezy

@{
    <!-- tytul strony (chodzi o zakladke) -->
    ViewBag.Title = "Wpis o dokumencie";
}

<head>
    <!-- zalaczenie biblioteki globalnej style.css -->
    <link rel="Stylesheet" href="~/Content/style.css" type="text/css" />
</head>

<div class="naglowekStrony">
    Edytowanie imprezy
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Imprezy</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idImpreza)

        <div class="form-group">
            @Html.LabelFor(model => model.nazwaImprezy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nazwaImprezy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nazwaImprezy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rodzaj, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rodzaj, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rodzaj, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.miejsce, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.miejsce, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.miejsce, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.czasTrwania, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.czasTrwania, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.czasTrwania, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cyklicznosc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cyklicznosc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cyklicznosc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.charakterUczestnictwa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.charakterUczestnictwa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.charakterUczestnictwa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.formaOrganizacyjna, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.formaOrganizacyjna, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.formaOrganizacyjna, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cenaBiletu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cenaBiletu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cenaBiletu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.liczbaUczestnikow, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.liczbaUczestnikow, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.liczbaUczestnikow, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.identyfikatorPorownania, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.identyfikatorPorownania, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.identyfikatorPorownania, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Przelozony_Listaimprez")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
