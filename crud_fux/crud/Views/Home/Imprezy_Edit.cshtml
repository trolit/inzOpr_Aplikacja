@model crud.Models.Imprezy

@{
    <!-- tytul strony (chodzi o zakladke) -->
    ViewBag.Title = "Edycja imprezy";
}

<head>
    <!-- zalaczenie biblioteki globalnej style.css -->
    <link rel="Stylesheet" href="~/Content/style.css" type="text/css" />
</head>

<div class="naglowekStrony">
    <ol class="breadcrumb tloOkruszka">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Strona główna</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Przelozony", "Home")">Przełożony</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Przelozony_Listaimprez", "Home")">Lista imprez</a></li>
        <li class="breadcrumb-item active">Impreza @Html.DisplayFor(model => model.idImpreza)</li>
    </ol>
</div>

<div class="form-horizontal">
    <hr />
    <div class="col-lg-6 col-md-8 mx-auto jumbotron">
        <div style="font-family: 'Arima Madurai', sans-serif; font-size:130%; margin-top: 5%;">
            <div class="text-center" style="margin-bottom: 15px;">
                <i class="fas fa-clipboard-check fa-7x"></i>
            </div>
            <p class="text-center" style="font-weight: bold;">Edytuj wpis</p>
            <p class="text-justify" style="font-size: 75% !important">
                <i class="fas fa-exclamation-circle"></i> By edytować wpis, kliknij w pole.
            </p>
            <hr />
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal" style="font-size: 75%; !important;">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.idImpreza)

                    <div class="form-group">
                        @Html.Label("Nazwa imprezy", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nazwaImprezy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nazwaImprezy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Rodzaj/treść", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.rodzaj, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.rodzaj, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Proponowane miejsce realizacji", htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.miejsce, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.miejsce, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Czas trwania", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.czasTrwania, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.czasTrwania, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Cykliczność", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cyklicznosc, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cyklicznosc, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Charakter uczestnictwa", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.charakterUczestnictwa, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.charakterUczestnictwa, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Forma organizacyjna", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.formaOrganizacyjna, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.formaOrganizacyjna, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Cena biletów", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cenaBiletu, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cenaBiletu, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Liczba uczestników", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.liczbaUczestnikow, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.liczbaUczestnikow, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Identyfikator porównania", htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.identyfikatorPorownania, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.identyfikatorPorownania, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Zapisz" class="btn btn-lg btn-success" />
                            @Html.ActionLink("Wróć", "Przelozony_Listaimprez", null, null, new { @class = "btn przyciskPowrot" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
